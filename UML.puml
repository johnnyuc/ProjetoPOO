@startuml
!define LIGHTGREEN
!includeurl https://raw.githubusercontent.com/Drakemor/RedDress-PlantUML/master/style.puml

    class Escritor {
    - String baseDados
    ---
    + guardaDadosDat(ArrayList<Empresa> empresas): void
    ---
    }
    class Leitor {
    - String baseDados
    - String baseDadosTxt
    ---
    + carregaDadosTxt(): ArrayList<Empresa>
    + carregaDadosDat(): ArrayList<Empresa>
    ---
    }

    class GerirEmpresas {
    - ArrayList<Empresa> empresas
    ---
    + empresaUnica(String nome): boolean
    + pesquisarEmpresa(String nome): Empresa
    + apagarEmpresa(String nome): void
    + maiorReceitaAnual(int tipoProcurar): String
    + menorDespesaAnual(int tipoProcurar): String
    + maiorLucroAnual(int tipoProcurar): String
    + maiorCapacidadeClientes(int tipoProcurar): String
    ---
    + getEmpresas(): ArrayList<Empresa>
    + setEmpresas(ArrayList<Empresa> empresas): void
    }
    abstract Empresa {
    - String nome
    - String distrito
    - float[] coordenadas
    - int tipo
    ---
    + calcularDespesaAnual(): float
    + calcularReceitaAnual(): float
    + calcularLucro(): float
    ---
    + getTipo(): int
    + setTipo(int tipo): void
    + getNome(): String
    + setNome(String nome): void
    + getDistrito(): String
    + setDistrito(String distrito): void
    + getCoordenadas(): float[]
    + setCoordenadas(float[] coordenadas): void
    }
    abstract Restauracao {
    - int empregadosMesa
    - float salarioMedioAnual
    - float clientesMedioDiario
    ---
    ---
    + getEmpregadosMesa(): int
    + setEmpregadosMesa(int empregadosMesa): void
    + getSalarioMedioAnual(): float
    + setSalarioMedioAnual(float salarioMedioAnual): void
    + getClientesMedioDiario(): float
    + setClientesMedioDiario(float clientesMedioDiario): void
    }
    class Cafe {
    - cafesMedioDiario
    - faturacaoMediaAnualCafe
    ---
    + calcularReceitaAnual(): float
    + calcularDespesaAnual(): float
    ---
    + getCafesMedioDiario(): float
    + setCafesMedioDiario(float cafesMedioDiario): void
    + getFaturacaoMediaAnualCafe(): float
    + setFaturacaoMediaAnualCafe(float faturacaoMediaAnualCafe): void
    }
    class Pastelaria {
    - float bolosMedioDiario
    - float faturacaoMediaAnualBolo
    ---
    + calcularReceitaAnual(): float
    + calcularDespesaAnual(): float
    ---
    + getBolosMedioDiario(): float
    + setBolosMedioDiario(float bolosMedioDiario): void
    + getFaturacaoMediaAnualBolo(): float
    + setFaturacaoMediaAnualBolo(float faturacaoMediaAnualBolo): void
    }
    abstract Restaurante {
    - int diasFuncionamento
    ---
    ---
    + getDiasFuncionamento(): int
    + setDiasFuncionamento(int diasFuncionamento): void
    }
    class Fastfood {
    - int mesasInterior
    - float faturacaoMediaMesaDiario
    - float clientesMedioDrive
    - float faturacaoMediaClienteDrive
    ---
    + calcularReceitaAnual(): float
    + calcularDespesaAnual(): float
    ---
    + getMesasInterior(): int
    + setMesasInterior(int mesasInterior): void
    + getFaturacaoMediaMesaDiario(): float
    + setFaturacaoMediaMesaDiario(float faturacaoMediaMesaDiario): void
    + getClientesMedioDrive(): float
    + setClientesMedioDrive(float clientesMedioDrive): void
    + getFaturacaoMediaClienteDrive(): float
    + setFaturacaoMediaClienteDrive(float faturacaoMediaClienteDrive): void
    }
    class Local {
    - int mesasInterior
    - int mesasEsplanada
    - float custoLicencaMesaEsplanada
    - float faturacaoMediaMesaDiario
    ---
    + calcularReceitaAnual(): float
    + calcularDespesaAnual(): float
    ---
    + getMesasInterior(): int
    + setMesasInterior(int mesasInterior): void
    + getMesasEsplanada(): int
    + setMesasEsplanada(int mesasEsplanada): void
    + getCustoLicencaMesaEsplanada(): float
    + setCustoLicencaMesaEsplanada(float custoLicencaMesaEsplanada): void
    + getFaturacaoMediaMesaDiario(): float
    + setFaturacaoMediaMesaDiario(float faturacaoMediaMesaDiario): void
    }
    abstract Mercearia {
    - custoAnualLimpeza
    ---
    ---
    + getCustoAnualLimpeza(): float
    + setCustoAnualLimpeza(float custoAnualLimpeza): void
    }
    class Frutaria {
    - int numeroProdutos
    - float faturacaoMediaAnualProduto
    ---
    + calcularReceitaAnual(): float
    + calcularDespesaAnual(): float
    ---
    + getNumeroProdutos(): int
    + setNumeroProdutos(int numeroProdutos): void
    + getFaturacaoMediaAnualProduto(): float
    + setFaturacaoMediaAnualProduto(float faturacaoMediaAnualProduto): void
    }
    class Mercado {
    - String tipoMercado
    - int areaCorredores
    - float faturacaoMediaAnualM2
    ---
    + calcularReceitaAnual(): float
    + calcularDespesaAnual(): float
    ---
    + getTipoMercado(): String
    + setTipoMercado(String tipoMercado): void
    + getAreaCorredores(): int
    + setAreaCorredores(int areaCorredores): void
    + getFaturacaoMediaAnualM2(): float
    + setFaturacaoMediaAnualM2(float faturacaoMediaAnualM2): void
    }

    class JanelaPrincipal {
    - JButton botaoOperacoes
    - JButton botaoEstatisticas
    - JButton botaoSair
    - JLabel labelTitulo
    - JLabel labelIcone
    - JTextArea areaTexto
    - JScrollPane elementoScroll
    - JLabel labelDireitos
    - GroupLayout layout
    ---
    + initComponents: void
    + gereLayout: void
    }
    class JanelaOperacoes {
    - JanelaOperacoes selfInstance
    - JScrollPane jScrollPane2
    - JTable tabela
    - JButton botaoCriar
    - JButton botaoRemover
    - JButton botaoEditar
    - JButton botaoPesquisar
    - JButton botaoFechar
    - GroupLayout layout
    ---
    + initComponentsOperacoes: void
    + gereLayout: void
    + arrayDadosEmpresas: Object[][]
    + sorter: void
    + atualizarLista: void
    ---
    }
    class JanelaCriaEdita {
    - JanelaOperacoes janelaMae
    - Empresa editar
    - JComboBox<String> botaoSelecionador
    - JLabel labelInfo
    - JLabel jLabel1
    - JTextArea jTextField1
    - JLabel jLabel2
    - JTextArea jTextField2
    - JLabel jLabel3
    - JTextArea jTextField3
    - JLabel jLabel4
    - JTextArea jTextField4
    - JLabel jLabel5
    - JTextArea jTextField5
    - JLabel jLabel6
    - JTextArea jTextField6
    - JLabel jLabel7
    - JTextArea jTextField7
    - JLabel jLabel8
    - JTextArea jTextField8
    - JLabel jLabel9
    - JTextArea jTextField9
    - JLabel jLabel10
    - JTextArea jTextField10
    - JLabel jLabel11
    - JTextArea jTextField11
    - JLabel jLabel12
    - JTextArea jTextField12
    - JButton botaoGuardar
    - JButton botaoFechar
    - GroupLayout layout
    ---
    + initComponentsCriar: void
    + initComponentsEditar: void
    + gereLayout: void
    + botaoSelecionadorActionPerformed: void
    + botaoGuardarActionPerformed: void
    + botaoAlterarActionPerformed: void
    ---
    }
    class JanelaEstatisticas {
    - JScrollPane painelMae
    - JScrollPane cafePanel
    - JScrollPane pastelariaPanel
    - JScrollPane fastfoodPanel
    - JScrollPane localPanel
    - JScrollPane frutariaPanel
    - JScrollPane mercadoPanel
    ---
    + initComponents
    + gereLayout: void
    + cafeActionPerformed: void
    + pastelariaActionPerformed: void
    + fastfoodActionPerformed: void
    + localActionPerformed: void
    + frutariaActionPerformed: void
    + mercadoActionPerformed: void
    ---
    }


    class Main {
    ---
    + main(String[] args): void
    + booting(): void
    + display(GerirEmpresas StarThrive): void
    ---
    }

Main -- "1" GerirEmpresas
GerirEmpresas "1" -- "0..1" Empresa

Empresa <-- Restauracao
Empresa <-- Mercearia
Restauracao <-- Cafe
Restauracao <-- Pastelaria
Restauracao <-- Restaurante
Restaurante <-- Fastfood
Restaurante <-- Local
Mercearia <-- Frutaria
Mercearia <-- Mercado

Main -- "1" JanelaPrincipal
JanelaPrincipal "1" -- "0..1" JanelaOperacoes
JanelaPrincipal "1" -- "0..1" JanelaEstatisticas
JanelaOperacoes "1" -- "0..1" JanelaCriaEdita

Main -- "1" Leitor
Main -- "1" Escritor
JanelaCriaEdita "1" -- "1" Escritor

@enduml